class Solution {
public:
    // void inOrder(TreeNode* root,vector<int>& ans){
    //     if(root==nullptr) return;
    //     inOrder(root->left,ans);
    //     ans.push_back(root->val);
    //     inOrder(root->right,ans);
    // }
    vector<int> inorderTraversal(TreeNode* root) {
        // vector<int> ans;

        // inOrder(root,ans);
        // return ans;
        stack<TreeNode*> st;
        TreeNode* node =root;
        vector<int> inOrder;
        while(true){
            if(node!=NULL){
                st.push(node);
                node=node->left;
            }else{
                if(st.empty()==true) break;
                node=st.top();
                st.pop();
                inOrder.push_back(node->val);
                node=node->right;
            }
        }
        return inOrder;
    }
};